#BlueJ class context
comment0.params=size
comment0.target=OpenAddressing(int)
comment0.text=\r\n\ Construct\ an\ open\ addressing\ hashtable\ with\ the\ specified\r\n\ initial\ size.\r\n\ @param\ size\ the\ (intial)\ size\ of\ the\ hash\ table\r\n
comment1.params=key
comment1.target=int\ index(java.lang.Object)
comment1.text=\r\n\ Calculate\ an\ index\ in\ the\ hashtable\ for\ an\ entry\ with\ the\ given\ key.\ \ Return\ the\ entry's\r\n\ index\ if\ it\ exists.\ \ If\ there\ is\ no\ such\ entry\ return\ the\ index\ of\ the\r\n\ next\ free\ field\ in\ the\ hashtable\ (for\ this\ key).\r\n\ @param\ key\ the\ key\ being\ looked\ for\r\n\ @return\ the\ index\ of\ the\ entry\ with\ this\ key,\ if\ it\ exists\r\n\ @return\ the\ address\ of\ the\ next\ free\ space\ if\ there\ is\ no\ such\ key\ in\ the\ table\r\n\ @throws\ HashtableError\ if\ the\ table\ is\ full\ and\ does\ not\ contain\ an\ entry\ with\ the\ given\ key\r\n
comment2.params=index\ n
comment2.target=int\ probe(int,\ int)
comment2.text=\r\n\ Find\ the\ next\ available\ index\ in\ the\ case\ of\ an\ address\ collision\r\n\ @param\ index\ the\ initial\ index\ returned\ by\ the\ raw\ hash\ function\r\n\ @param\ n\ the\ number\ of\ this\ attempt\ (how\ many\ times\ have\ we\ probed\ since\ the\ first\ index\ calculation)\r\n\ @return\ the\ address\ specified\ by\ the\ probing\ function\ for\ this\ type\ of\ hashtable\r\n
numComments=3
